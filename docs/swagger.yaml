basePath: /v1
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.LoginResponse:
    properties:
      success:
        type: boolean
    type: object
  auth.RegisterRequest:
    properties:
      birthday:
        type: string
      email:
        type: string
      firstName:
        type: string
      gender:
        allOf:
        - $ref: '#/definitions/users.Gender'
        enum:
        - male
        - female
      lastName:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - birthday
    - email
    - firstName
    - gender
    - lastName
    - password
    type: object
  auth.RegisterResponse:
    properties:
      success:
        type: boolean
    type: object
  users.Gender:
    enum:
    - male
    - female
    type: string
    x-enum-varnames:
    - Male
    - Female
host: localhost:777
info:
  contact: {}
  description: This is a Concert booking application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Concert booking API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 'Login user, set token in cookie and return success: true'
      parameters:
      - description: LoginRequest credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user and return authentication token
      parameters:
      - description: Registration credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully registered
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
